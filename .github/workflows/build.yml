name: Nix actions

on:
  pull_request:
  push:
    branches:
      - main
      - gha
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  Nix:
    name: "Build and test"
    runs-on: ${{ matrix.host }}
    strategy:
      matrix:
        include:
          - host: buildjet-32vcpu-ubuntu-2204
            target: "x86_64-linux"
            os: "Linux"
          # - host: [self-hosted, X64, Windows]
          #   target: "x86_64-linux"
          - host: [self-hosted, ARM64, macOS]
            target: "aarch64-darwin"
            os: "Darwin"

    steps:
      - uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        id: creds
        with:
          role-to-assume: arn:aws:iam::362267952554:role/github-action/nixer
          role-session-name: nixer-ci
          aws-region: us-east-1
          output-credentials: true

      - uses: DeterminateSystems/nix-installer-action@main
        if:  ${{ matrix.os == 'Linux' }}
        with:
          init: none
          logger: pretty
          planner:  linux
          kvm: true
          extra-conf: |
            extra-substituters = s3://cache.plex.bz?region=us-east-1
            trusted-public-keys = cache.plex.bz:Vdh+jRJPqfHyL3Mq5fHqRVMOoI3Jg6eSXkafBgY2eRU= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            system-features = nixos-test benchmark big-parallel kvm
            access-tokens = github.com=${{ secrets.GH_TOKEN_REPO_ACCESS }}

      - uses: DeterminateSystems/nix-installer-action@main
        if: ${{ matrix.os == 'Darwin' }}
        with:
          logger: pretty
          kvm: true
          extra-conf: |
            extra-substituters = s3://cache.plex.bz?region=us-east-1
            trusted-public-keys = cache.plex.bz:Vdh+jRJPqfHyL3Mq5fHqRVMOoI3Jg6eSXkafBgY2eRU= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            system-features = nixos-test benchmark big-parallel kvm
            access-tokens = github.com=${{ secrets.GH_TOKEN_REPO_ACCESS }}

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PLEX_NIX_SSH_PRIVATE_KEY }}

      - run: echo "'${{ secrets.NIX_CACHE_SIGNING_KEY }}'" > cache.key
      - name: Check and build packages
        run: sudo -E bash "${{ github.workspace }}/.github/workflows/run-linux-workflow.sh" "${{ github.workspace }}" $(which nix)
      - run: rm cache.key
